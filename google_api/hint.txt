
Link:
https://developers.google.com/books/docs/v1/using#WorkingVolumes
```
if google_url.status_code != 200:
    errors = ('Coś poszło nie tak')
    return render(request, 'book_api.html', {'form': form, 'messages': errors})
resoult = google_url.json()  # literówka, poprawnie jest result
...
messages.success(request, 'Dodano nową pozycję')
return HttpResponseRedirect(redirect('book-list'))
```
ify do uproszczenia:

if 'pageCount' in item['volumeInfo']:
    page_count=item['volumeInfo']['pageCount']
    book.objects.create(page_count=page_count)  # dlaczego create?

#  Np.takie coś
page_count = item['volumeInfo'].get('pageCount')
book.page_count = page_count

użycie biblioteki requests, zamiast HttpResponseRedirect
shell:
```
import requests
response = requests.get('https://www.googleapis.com/books/v1/volumes?q=Solaris')
import json
data = json.loads(response.content)
data.keys()
for item in data['items']:
    print(item['volumeInfo']['title'])
    try:
        print(', '.join(item['volumeInfo']['authors']))
    except KeyError:
        print('Unknown author')
    try:
        print(item['volumeInfo']['industryIdentifiers'])
        for identifier in item['volumeInfo']['industryIdentifiers']:
            if identifier['type'] == 'ISBN_10':
                print(f"{identifier['type']}: {identifier['identifier']}")
                pass
            else identifier['type'] == 'ISBN_13':
                print(f"{identifier['type']}: {identifier['identifier']}")
            else identifier['type'] == 'OTHER':
                print(f"{identifier['type']}: {identifier['identifier']}")
            else:
                print('Unknown identifiers')
    except KeyError:
        print('Unknown identifiers')
    try:
        print(item['volumeInfo']['pageCount'])
    except KeyError:
        print('Unknown number of pages')
    try:
        print(item['volumeInfo']['imageLinks']['thumbnail'])
    except KeyError:
        print('No link')
    try:
        print(item['volumeInfo']['language'])
    except KeyError:
        print('unknown language')
    try:
        print(item['volumeInfo']['publishedDate'])
    except KeyError:
        print('no date')


write functon for every key - if not in, write none in db
any idea on turning off migrations?
and i'm still collecting knowledge

